Welcome to Sarateese!

First off all code must be defined in a block.
Blocks need to be labeled with a unique identifier.
Blocks can optionally requiure other blocks to run before them otherwise all blocks run in parallel.
The requires tag as well as the variables tag are optional. 

block d requires[a[var1, var2], b, c]{
    print("hello world");
}

PRINT
print([expression]);
ex.
print("hello world"); -> hello world
print(1 + 1); -> 2
print(1 + 1 == 2); -> True
i32 a = 5;
print(a); -> 5

VARIABLES
[variable type] [variable name] = [value];
ex.
String s = "hello world";
i32 eleven = 11;
Bool red = false;

WHILE
while([expression -> condition]){
    [lines to be executed]
}
ex.
while(true){
    print("foo");
}
Bool a = true;
while(a){
    print("bar");
}

IF
if([expression -> condition]){
    [lines to be executed]
}
ex.
if(true){
    print("foo");
}
Bool a = true;
if(a){
    print("bar");
}

FOR
for([variable type] [variable name] = [initial value], [expression -> condition], [increment]){
    [lines to be executed]
}
ex.
for(i32 i = 0; i < 10; i++){
    print(i); -> 0 1 2 3 4 5 6 7 8 9
}

MATH OPS
#includes order of operations
a + b
a - b
a * b
a / b
a % b
a == b
a != b
a > b
a >= b
a < b
a <= b

TYPE CASTING
Cast with type function calls
i32(arg)
i64(arg)
f32(arg)
f64(arg)

BOOLEAN OPERATIONS
a || b
!a
a && b

MULTIDIMENSIONAL ARRAYS
Array<Array<i32>> a = [[1, 2, 3], [1, 2, 3]]

SLEEP: pause block execution for n seconds. 
sleep(x: int)